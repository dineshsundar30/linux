# if your in root it will show $ is means other user

--------------------------linux file system ----------------------------------

file system --> a system used by OS to manage files it controls hwo data saved and retrived like our closet

Important Directories 

/ → Root directory (starting point of everything).

/bin → Essential user commands (ls, cp, cat).

/boot → Files needed to boot Linux (kernel, GRUB, initramfs).

/dev → Device files (hard drives, USB, printers shown as files).

/etc → System configuration files (passwords, network, services).

/home → User home directories (/home/user1, /home/user2).

/lib → Shared libraries (like .dll in Windows).

/lost+found → Recovered files after crashes (each partition has one).

/media → Auto-mounted removable drives (USB, CD/DVD).

/mnt → Temporary mount point for storage (manual mounting).

/opt → Optional software packages installed manually.

/proc → Virtual files showing system/kernel info (e.g., /proc/cpuinfo).

/root → Root user’s personal directory.

/run → Runtime data for processes since boot.

/sbin → System binaries (admin commands like fsck, ifconfig).

/srv → Data for services (like web servers, FTP).

/sys → System and device information (replacement for some /proc info).

/tmp → Temporary files (deleted on reboot).

/usr → User programs and libraries:

/var → Variable data (logs, mail, cache, spool files):

------------------------Basic cmd's------------------------

sudo passwd root --> to change the password, also we can change the other user password also with this
su -  --> to switch the user use su for - will go to root
exit  --> to exit from user
passwd  --> use to change the currrent password
pwd  --> print working directory 

cd --> it will go to home directory
cd /  --> it will move to root directory
mkdir directory_name  --> to create directory

cp file1.txt file2.txt             # Copy file1 → file2 (same folder)
cp file1.txt /home/user/Docs/      # Copy file1.txt into Docs folder
cp -r myfolder /home/user/backup/  # Copy folder into backup
cp -v file.txt /home/user/         # Copy and show progress
cp -i file.txt /home/user/         # Ask before overwrite
cp -u file.txt /home/user/         # Copy only if newer

mv file1.txt /home/user/Docs/      # Move file1.txt into Docs folder
mv old.txt new.txt                 # Rename old.txt → new.txt
mv *.txt /home/user/backup/        # Move all .txt files into backup


ls  --> to list the files 
ls -F --> it will use to see the diffrenctiate files and filders in the directory if it directory it will end with / if files it will just show the name
ls -a  --> it will list the hidden file also 
ls -R --> recursive too see the files inside your current sub directories files 
ls -l --> to see the info about the files and folders
ls -l files.txt  --> to see particular file info, here you can pass partical name using * like ls -l files*
ls -l my_fi?e  --> if you need to search name with commen but diffrent in between we can use ?


rm file_name.txt  --> to delete the file
rm path path --> you can add multipule file to delete
rm -i fileame  --> it will ask the confirmation before delete the file

 
 
touch file_name.txt  --> to create files
echo "sample content" > f ileanme Or filename with directory
ln -s main_file_path  destination_symbolic_filename_path --> to create symbolic lick file for a file
ln -sf newmain_file_path  destination_symbolic_filename_path   --> if main file is deleted means we can use this and link that old symbolic file
ln main_file_path  destination_hard_filename_path --> to create hard lick file for a file and to see the info we need to use ls -li for hard file to see inode 




